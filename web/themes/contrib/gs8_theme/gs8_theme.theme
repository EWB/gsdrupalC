<?php
/**
 * @file
 * Theme functions
 */

// Include all files from the includes directory.
$includes_path = dirname(__FILE__) . '/includes/*.inc';
foreach (glob($includes_path) as $filename) {
  require_once dirname(__FILE__) . '/includes/' . basename($filename);
}

/**
 * Implements hook_preprocess_HOOK().
 */
function gs8_theme_preprocess_page(&$variables) {
  $variables['container'] = 'container';

  $node = \Drupal::routeMatch()->getParameter('node');

  if(!is_object($node) && is_int((int) $node)) {
    $node = Drupal\node\Entity\Node::load($node);
  }
  if (is_object($node)) {
    if ($node->hasField('field_container_fluid') && $node->get('field_container_fluid')->value){
      $variables['container'] = 'container-fluid';
    }

    // uncomment if you want to set all nodes of a content type to container-fluid
    // $type = $node->getType();
    // switch ($type) {
    //   case 'narrative':
    //     $variables['container'] = 'container-fluid';
    //     break;
    // }
  } else {
    $view_id = \Drupal::routeMatch()->getParameter('view_id');
    if ($view_id){
      // if the display mode starts with 'fluid_'
      $display_id = \Drupal::routeMatch()->getParameter('display_id');
      if($display_id && substr($display_id,0,6) === 'fluid_'){
        $variables['container'] = 'container-fluid';
      }
    }
  }
}

/**
 * Implements hook_preprocess_page_title().
 */
function gs8_theme_preprocess_page_title(&$variables) {
  if ($view_id = \Drupal::routeMatch()->getParameter('view_id')) {
    //unset($variables['title']);
  }
}
/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 * @param array $suggestions
 * @param array $variables
 */
function gs8_theme_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  // Block suggestions for custom block bundles.
  if (isset($variables['elements']['content']['#block_content'])) {
    array_splice($suggestions, 1, 0, 'block__bundle__' . $variables['elements']['content']['#block_content']->bundle());
  }
}
